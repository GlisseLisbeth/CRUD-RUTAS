{"version":3,"sources":["components/Header.jsx","components/ItemProducto.jsx","components/Productos.jsx","components/Error.jsx","components/AgregarProducto.jsx","components/EditarProducto.jsx","components/Formulario.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","id","exact","activeClassName","Component","ItemProducto","eliminarProducto","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","a","value","url","axios","delete","status","props","reloadProductos","console","log","this","producto","nombrePlatillo","precioPlatillo","categoria","scope","onClick","Productos","listaProductos","map","item","key","Error","mensaje","AgregarProducto","state","error","handleChange","e","setState","target","name","agregar","preventDefault","post","resultado","alerta","history","push","onSubmit","htmlFor","type","onChange","placeholder","checked","withRouter","EditarProducto","editar","put","Formulario","match","path","App","getProductos","get","data","getProducto","idProducto","parseInt","filter","render","params","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4163eddf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link, NavLink} from 'react-router-dom'\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <Link className=\"navbar-brand\" to=\"/productos\">React router</Link>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink \n              exact\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              to=\"/productos\">Productos</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink \n                exact\n                className=\"nav-link\" \n                activeClassName=\"active\"\n                to=\"/productos/nuevo\">Agregar Productos</NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\n\nclass ItemProducto extends Component {\n  eliminarProducto = (id)=> {\n    Swal.fire({\n      title: 'Esta seguro?',\n      text: \"Un platillo eliminado no se puede recuperar\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si eliminar',\n      cancelButtonText: 'Cancelar',\n    }).then( async (result) => {\n      if (result.value) {\n        try{\n          const url =  `http://localhost:4000/restaurant/${id}`;\n          const resultado = await axios.delete(url);\n          if(resultado.status === 200) {\n            Swal.fire(\n              'Eliminado!',\n              'El producto se a eliminado',\n              'success'\n            )\n          }\n          this.props.reloadProductos();\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    })\n  }\n  render() {\n    const {id, nombrePlatillo, precioPlatillo, categoria} = this.props.producto;\n    return (\n      <tr>\n        <th scope=\"row\">{id}</th>\n        <td>{nombrePlatillo}</td>\n        <td>{categoria}</td>\n        <td>S/. {precioPlatillo}</td>\n        <td className=\"d-flex justify-content-around\"> \n          <Link \n            to={`/productos/editar/${id}`}\n            className=\"btn btn-warning\">\n            Editar\n          </Link>\n          <button\n            onClick={()=> this.eliminarProducto(id)}\n           className=\"btn btn-danger\">\n            Eliminar\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ItemProducto;","import React, { Component } from 'react';\nimport ItemProducto from './ItemProducto'\nclass Productos extends Component {\n  render() {\n    const {listaProductos} = this.props\n    return (\n      <div>\n        <h1>Productos</h1>\n        <table className=\"table\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Nombre</th>\n              <th scope=\"col\">Categoria</th>\n              <th scope=\"col\">Precio</th>\n              <th scope=\"col\">Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              listaProductos.map((item) => {\n                return (\n                  <ItemProducto\n                  reloadProductos = {this.props.reloadProductos}\n                  key={item.id} producto={item}/>\n                )\n              })\n            }\n            \n          </tbody>\n        </table>\n  </div>\n    );\n  }\n}\n\nexport default Productos;","import React, { Component } from 'react';\n\nclass Error extends Component {\n  \n  render() {\n    const {mensaje} = this.props\n    return (\n      <div className=\"row justify-content-center\">\n      <p \n        className=\"alert col-md-6 alert-danger p3 my-2 text-center text-uppercase\">\n          {mensaje}</p>\n    </div>\n    );\n  }\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport Error from './Error';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom';\nimport Swal from 'sweetalert2'\n\nclass AgregarProducto extends Component {\n\n  state = {\n    producto: {\n      nombrePlatillo: '',\n      precioPlatillo: '',\n      categoria: '',\n    },\n    error: false\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      producto: {\n        ...this.state.producto,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  agregar = async(e)=> {\n    e.preventDefault();\n    const {nombrePlatillo, precioPlatillo, categoria} = this.state.producto;\n    if(nombrePlatillo === '' || precioPlatillo === '' || categoria === '') {\n      this.setState({error: true});\n      return;\n    }\n    this.setState({error: false});\n\n    // Guardado del producto\n    const url =  'http://localhost:4000/restaurant';\n    const {producto}= this.state;\n    try{\n      const resultado = await axios.post(url, {...producto});\n      if(resultado.status === 201) {\n        this.alerta();\n        this.props.reloadProductos();\n        this.props.history.push('/productos');\n      }\n      console.log(resultado);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  alerta = ()=> {\n    Swal.fire(\n      'Exito!',\n      'Producto agregado correctamente',\n      'success'\n    )\n  }\n  render() {\n    const {error}=this.state;\n    return (\n      <div>\n        <h1 className=\"text-center\">Agregar Nuevo producto</h1>\n        {error && <Error mensaje=\"Todos los campos son obligatorios\"/>}\n        <form className=\"mt-4\" onSubmit={this.agregar}>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Nombre</label>\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                name=\"nombrePlatillo\"\n                onChange = {this.handleChange}\n                value= {this.state.producto.nombrePlatillo}\n                placeholder=\"Nombre del platillo\"/>\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputAddress\">Precio</label>\n              <input \n                type=\"number\" \n                className=\"form-control\"\n                name=\"precioPlatillo\"\n                onChange = {this.handleChange}\n                value= {this.state.producto.precioPlatillo}\n                placeholder=\"Precio\"/>\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center mt-3\">\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Postres'}\n                value=\"Postres\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Postres\">Postres</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Bebidas'}\n                value=\"Bebidas\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Bebidas\">Bebidas</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Cortes'}\n                value=\"Cortes\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Cortes\">Cortes</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Cortes'}\n                value=\"Ensaladas\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Ensaladas\">Ensaladas</label>\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center mt-4\">\n            <button  type=\"submit\" className=\"btn btn-primary col-md-6\">Agregar</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AgregarProducto);","import React, { Component } from 'react';\n\nimport Error from './Error';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom';\nimport Swal from 'sweetalert2'\n\nclass EditarProducto extends Component {\n  state = {\n    producto: {\n      nombrePlatillo: '',\n      precioPlatillo: '',\n      categoria: '',\n    },\n    error: false\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.setState({producto: this.props.producto});\n  }\n\n\n  handleChange = (e) => {\n    this.setState({\n      producto: {\n        ...this.state.producto,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  editar = async(e)=> {\n    e.preventDefault();\n    const {nombrePlatillo, precioPlatillo, categoria, id} = this.state.producto;\n    if(nombrePlatillo === '' || precioPlatillo === '' || categoria === '') {\n      this.setState({error: true});\n      return;\n    }\n    this.setState({error: false});\n\n    // Editar del producto\n    const url =  `http://localhost:4000/restaurant/${id}`;\n    const {producto}= this.state;\n    try{\n      const resultado = await axios.put(url, {...producto});\n      if(resultado.status === 200) {\n        this.alerta();\n        this.props.reloadProductos();\n        this.props.history.push('/productos');\n      }\n      console.log(resultado);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  alerta = ()=> {\n    Swal.fire(\n      'Exito!',\n      'Producto Editado correctamente',\n      'success'\n    )\n  }\n  render() {\n    const {error}=this.state;\n    return (\n      <div>\n        <h1 className=\"text-center\">Editar Producto</h1>\n        {error && <Error mensaje=\"Todos los campos son obligatorios\"/>}\n        <form className=\"mt-4\" onSubmit={this.editar}>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputEmail4\">Nombre</label>\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                name=\"nombrePlatillo\"\n                onChange = {this.handleChange}\n                value= {this.state.producto.nombrePlatillo}\n                placeholder=\"Nombre del platillo\"/>\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputAddress\">Precio</label>\n              <input \n                type=\"number\" \n                className=\"form-control\"\n                name=\"precioPlatillo\"\n                onChange = {this.handleChange}\n                value= {this.state.producto.precioPlatillo}\n                placeholder=\"Precio\"/>\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center mt-3\">\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Postres'}\n                value=\"Postres\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Postres\">Postres</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Bebidas'}\n                value=\"Bebidas\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Bebidas\">Bebidas</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Cortes'}\n                value=\"Cortes\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Cortes\">Cortes</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                name=\"categoria\"\n                onChange = {this.handleChange}\n                checked = {this.state.producto.categoria === 'Ensaladas'}\n                value=\"Ensaladas\" />\n              <label \n                className=\"form-check-label\" \n                htmlFor=\"Ensaladas\">Ensaladas</label>\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center mt-4\">\n            <button  \n              type=\"submit\" \n              className=\"btn btn-primary col-md-6\">Agregar</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EditarProducto);","import React, { Component, Fragment } from 'react';\nimport AgregarProducto from './AgregarProducto';\nimport EditarProducto from './EditarProducto';\n\nclass Formulario extends Component {\n    render() {\n        return (\n            <Fragment>\n                {this.props.match.path === '/productos/editar/:id' ? \n                <EditarProducto \n                    reloadProductos = {this.props.reloadProductos}\n                    producto = {this.props.producto}\n                />\n                :\n                <AgregarProducto \n                    reloadProductos = {this.props.reloadProductos}/>\n                }\n            </Fragment>\n        );\n    }\n}\n\nexport default Formulario;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom'\nimport Header from './components/Header';\nimport Productos from './components/Productos';\nimport axios from 'axios'\nimport Formulario from './components/Formulario';\nclass App extends React.Component {\n  state = {\n    listaProductos: []\n  }\n  componentDidMount(){\n    this.getProductos();\n  }\n  getProductos = async ()=> {\n    const resultado = await axios.get('http://localhost:4000/restaurant');\n    this.setState({listaProductos: resultado.data})\n  }\n  getProducto = (id) => {\n    console.log(id);\n    const idProducto = parseInt(id);\n    console.log(idProducto);\n    const producto = this.state.listaProductos.filter(producto => producto.id ===idProducto);\n    return producto[0];\n  }\n  render(){\n    return (\n      <Router>\n        <Header/>\n        <main className=\"container\">\n          <Switch>\n            <Route exact path=\"/productos/nuevo\" \n              render= {\n                (props)=>(\n                  <Formulario reloadProductos = {this.getProductos}\n                  {...props}/>\n                )\n              }></Route>\n            <Route exact path=\"/\">\n              <Redirect to=\"/productos\"></Redirect>\n            </Route>\n\n            <Route \n              exact \n              path=\"/productos\" \n              render={\n                ()=>(\n                  <Productos \n                    reloadProductos = {this.getProductos}\n                    listaProductos={this.state.listaProductos}/>)}>\n            </Route>\n            <Route\n              exact\n              path=\"/productos/editar/:id\"\n              render={(props) => {\n                return (\n                  <Formulario\n                    reloadProductos = {this.getProductos}\n                    producto = {this.getProducto(props.match.params.id)}\n                    {...props}\n                  />\n                )\n              }}\n            >\n\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n      );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}